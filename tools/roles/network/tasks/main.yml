- name: Apt update
  become: true
  apt:
    update_cache: yes

- name: Install packages
  become: true
  apt:
    name:
      - nmap # network scanner
      - socat # socket tool
      - netcat-openbsd # network tool
      - freerdp2-x11 # rdp client
      - smbclient # smb client
      - snmp # snmp tools
      - postgresql-client # postgresql client
      - default-mysql-client # mysql client
      - ldap-utils # ldap tools

# Evil-winrm
- name: EvilWinrm requirements
  become: true
  ansible.builtin.apt:
    name:
      - ruby
      - ruby-dev

- name: Install evil-winrm
  become: true
  shell: gem install evil-winrm

- name: Fix /etc/ssl/openssl.cnf for evil-winrm
  become: true
  copy:
    src: openssl.cnf
    dest: /etc/ssl/openssl.cnf
    owner: root
    group: root
    mode: 0644

# GoodWinRM
- name: GoodWinRM requirements
  shell: pipx install git+https://github.com/h3x0c4t/goodwinrm

# NetExec
- name: NetExec
  shell: pipx install git+https://github.com/Pennyw0rth/NetExec

# Impacket
- name: Impacket
  shell: pipx install git+https://github.com/fortra/impacket

# SmbMap
- name: SmbMap
  shell: pipx install git+https://github.com/ShawnDEvans/smbmap

# DnsRecon
- name: DnsRecon
  shell: pipx install git+https://github.com/darkoperator/dnsrecon

# Wesng
- name: Wesng
  ansible.builtin.shell: |
    pipx install git+https://github.com/bitsadmin/wesng
    pipx inject wesng chardet

# BloodHound
- name: BloodHound
  uri:
    url: https://api.github.com/repos/BloodHoundAD/BloodHound/releases/latest
    return_content: true
  register: bloodhound_latest

- name: Install BloodHound
  loop: "{{ bloodhound_latest.json.assets }}"
  when: "'linux-x64.zip' in item.name"
  unarchive:
    remote_src: yes
    src: "{{ item.browser_download_url }}"
    dest: "{{ ansible_env.HOME }}/.local/"
    keep_newer: yes

- name: Rename BloodHound directory
  ansible.builtin.shell: |
    mv {{ ansible_env.HOME }}/.local/BloodHound* {{ ansible_env.HOME }}/.local/bloodhound

- name: Create launcher
  become: true
  copy:
    dest: "/usr/local/bin/bloodhound"
    content: |
      #!/bin/sh
      $HOME/.local/bloodhound/BloodHound --in-process-gpu  
    mode: 0755
